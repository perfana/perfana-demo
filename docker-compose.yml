version: '3.7'
services:

######################################################################################################################
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
  perfana:
    image: perfana/perfana-fe:perfana-2.6.1
    init: true
    expose:
      - 4000
    ports:
      - "4000:3000"
    networks:
      - perfana
    environment:
      SNAPSHOT_STATUS_DELAY: 1000
      PORT: 3000
      ROOT_URL: "http://localhost:4000"
      MONGO_URL: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
      MONGO_OPLOG_URL: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/local?replicaSet=rs0"
      METEOR_SETTINGS: '{
        "adminEmail":"admin@perfana.io",
        "adminPassword":"perfana",
        "prometheusRetention": "1296000",
        "influxDbRetention": "2592000",
        "snapshotExpires": "7776000",
        "perfanaUrl": "http://localhost:4000",
        "perfanaCheckUrl": "http://perfana-check:9191",
        "influxDbHost": "influxdb",
        "autoSetBaselineTestRun": true,
        "autoCompareTestRuns": true,
        "public": {
            "jaegerUrl": "http://localhost:16686",
            "pyroscopeUrl": "http://localhost:4040",
            "perfanaUrl": "http://localhost:4000"
        },
        "helmet": {
          "frameSrc": [
           "http://localhost:3000",
           "http://localhost:4040",
           "http://localhost:16686"
          ]
        },
        "grafanaInstances": [
              {
                "label": "Demo",
                "clientUrl": "http://localhost:3000",
                "serverUrl": "http://grafana:3000",
                "orgId": "1",
                "snapshotInstance": true,
                "trendsInstance": true,
                "username": "perfana",
                "password": "perfana"
              }
        ]
       }'

  ######################################################################################################################
  perfana-grafana:
    image: perfana/perfana-grafana:perfana-2.6.1
    environment:
      MONGO_URL: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
      SYNC_INTERVAL: 30000
      MYSQL_HOST: mariadb
      MYSQL_USER: root
      MYSQL_PASSWORD: perfana
    ports:
      - "3001:3000"
    networks:
      - perfana

  ######################################################################################################################
  perfana-fixture:
    image: perfana/perfana-fixture:perfana-2.3.1
    environment:
      MONGO_URL: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
    volumes:
        - ./import:/app/fixture/import
    ports:
      - "3002:3000"
    networks:
      - perfana

  ######################################################################################################################
  perfana-snapshot:
    image: perfana/perfana-snapshot-test:arm64-4
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      MONGO_URL: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
      DEBUG_WORKER_POOL: "true"
    networks:
      - perfana

  ######################################################################################################################
  perfana-check:
    image: perfana/perfana-check:perfana-2.6.1
    expose:
    - 9191
    ports:
    - "9191:9191"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      SPRING_DATA_MONGODB_URI: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
      SPRING_PROFILES_ACTIVE: "dev"
    networks:
      - perfana


  ######################################################################################################################
  perfana-scheduler:
    image: perfana/perfana-scheduler:perfana-2.6.1
    expose:
    - 9292
    ports:
    - "9292:9292"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      SPRING_DATA_MONGODB_URI: "mongodb://mongo1:27011,mongo2:27012,mongo3:27013/perfana?replicaSet=rs0"
      SPRING_PROFILES_ACTIVE: "dev"
    networks:
      - perfana

  ######################################################################################################################
  jenkins:
    image: perfana/perfana-jenkins-blog:lts-20221218-arm64
    expose:
    - 8080
    ports:
    - "8080:8080"
    volumes:
      - jenkins-storage:/var/jenkins_home
    networks:
      - perfana
    # depends_on:
    #   - influxdb

  ######################################################################################################################
  influxdb:
    image: influxdb:1.8.10
    ports:
    - "8086:8086"
    - "2003:2003"
    environment:
      INFLUXDB_GRAPHITE_ENABLED: "true"
    volumes:
    - "./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro"
    - influxdb-storage:/var/lib/influxdb
    networks:
      - perfana

  ######################################################################################################################
  jaeger:
    image: jaegertracing/all-in-one:1.22
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - perfana
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411

  ######################################################################################################################
  optimus-prime-fe:
    image: perfana/afterburner:2.2.0-SNAPSHOT-070b0f0
    ports:
      - "8090:8080"
    environment:
      "spring.application.name": "optimus-prime-fe"
      "afterburner.name": "optimus-prime-fe"
      "management.metrics.tags.system_under_test": "OptimusPrime"
      "management.metrics.tags.test_environment": "acc"
      "management.metrics.tags.service": "optimus-prime-fe"
      "afterburner.remote.call.base_url": "http://optimus-prime-be:8080"
      "afterburner.remote.call.httpclient.socket.timeout.millis": "10000"
      "JAVA_OPTS" : "-Xmx312m"
      "spring.zipkin.enabled": "true"
      "spring.zipkin.base-url": "http://jaeger:9411/"
      "spring.sleuth.sampler.probability": "0.1"
      "spring.sleuth.keys.http.headers": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.propagation.tag.enabled": "true"
      "spring.sleuth.propagation.tag.whitelisted-keys": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.propagation-keys": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.baggage-keys": "perfana-test-run-id,perfana-request-name"
      "afterburner.mybatis.datasource.url": "jdbc:mariadb://mariadb:3306/employees"
      "afterburner.mybatis.datasource.username": "root"
      "afterburner.mybatis.datasource.password": "perfana"
      "afterburner.mybatis.datasource.driver-class-name": "org.mariadb.jdbc.Driver"
    restart: always
    networks:
      - perfana
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M

  ######################################################################################################################
  optimus-prime-be:
    image: perfana/afterburner:2.2.0-SNAPSHOT-070b0f0
    environment:
      "spring.application.name": "optimus-prime-be"
      "spring.profiles.active": "employee-db"
      "afterburner.name": "optimus-prime-be"
      "management.metrics.tags.system_under_test": "OptimusPrime"
      "management.metrics.tags.test_environment": "acc"
      "management.metrics.tags.service": "optimus-prime-be"
      "afterburner.remote.call.base_url": "http://wiremock:8080"
      "afterburner.remote.call.httpclient.socket.timeout.millis": "10000"
      "JAVA_OPTS" : "-Xmx312m"
      "spring.zipkin.enabled": "true"
      "spring.zipkin.base-url": "http://jaeger:9411/"
      "spring.sleuth.sampler.probability": "0.1"
      "spring.sleuth.keys.http.headers": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.propagation.tag.enabled": "true"
      "spring.sleuth.propagation.tag.whitelisted-keys": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.propagation-keys": "perfana-test-run-id,perfana-request-name"
      "spring.sleuth.baggage-keys": "perfana-test-run-id,perfana-request-name"
      "afterburner.datasource.employee.jdbc-url": "jdbc:mariadb://mariadb:3306/employees"
      "afterburner.datasource.employee.username": "root"
      "afterburner.datasource.employee.password": "perfana"
      "afterburner.datasource.employee.poolMaximumActiveConnections": "5"
    restart: always
    networks:
      - perfana
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M

  ######################################################################################################################
  wiremock:
    image: perfana/perfana-wiremock:2.32.0-alpine
    ports:
     - "8060:8080"
    networks:
      - perfana

  ######################################################################################################################
  telegraf:
    image: telegraf:1.20.1
    volumes:
    - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
       - perfana

  ######################################################################################################################
  grafana:
    image: grafana/grafana:9.5.13
    expose: 
      - "3000"
    ports:
      - "3000:3000"
    environment:
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
        GF_SECURITY_ADMIN_USER: "perfana"
        GF_SECURITY_ADMIN_PASSWORD: "perfana"
        GF_SECURITY_ALLOW_EMBEDDING: "true"
        GF_INSTALL_PLUGINS: "marcusolsson-json-datasource"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini

    networks:
      - perfana

  ######################################################################################################################
  prometheus:
    image: prom/prometheus
    user:  root
    volumes:
      - ./prometheus-config:/prometheus
      - prometheus-storage:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    ports:
      - 9090:9090
    depends_on:
      - alertmanager
    networks:
      - perfana

  ######################################################################################################################
  alertmanager:
    image: prom/alertmanager
    user:  root
    volumes:
      - ./prometheus-config:/prometheus
      - prometheus-storage:/data
    command:
      - '--config.file=/prometheus/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
    networks:
      - perfana

  ######################################################################################################################
  mariadb:
    image: mariadb:10.5.5
    environment:
      MYSQL_ROOT_PASSWORD: perfana
    ports:
      - 3306:3306
    networks:
      - perfana
    volumes:
    - ./test_db:/db
    - ./test_db:/docker-entrypoint-initdb.d
    - ./mariadb:/etc/mysql/conf.d
    deploy:
     resources:
       limits:
         cpus: '1'
         memory: 512M



######################################################################################################################
  mongo1:
    hostname: mongo1
    image: mongo:$MONGO_VERSION
    expose:
    - 27011
    ports:
      - 27011:27011
    volumes:
      - mongo1-storage:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--port", "27011", "--replSet", "rs0" ]
    networks:
     - perfana
  mongo2:
    hostname: mongo2
    image: mongo:$MONGO_VERSION
    expose:
    - 27012
    ports:
    - 27012:27012
    volumes:
      - mongo2-storage:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--port", "27012", "--replSet", "rs0" ]
    networks:
     - perfana
  mongo3:
    hostname: mongo3
    image: mongo:$MONGO_VERSION
    expose:
    - 27013
    ports:
    - 27013:27013
    volumes:
      - mongo3-storage:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--port", "27013", "--replSet", "rs0" ]
    networks:
      - perfana


#######################################################################################################################
  omnidb:
    image: perfana/perfana-omnidb:1.0.0-blog
    expose:
    - 8888
    - 25482
    volumes:
      - ./omnidb:/etc/omnidb:rw
    ports:
    - 8888:8080
    - 25482:25482
    networks:
      - perfana


#######################################################################################################################
networks:
  perfana:
    driver: bridge

#######################################################################################################################
volumes:
  grafana-storage:
  jenkins-storage:
  influxdb-storage:
  prometheus-storage:
  mongo1-storage:
  mongo2-storage:
  mongo3-storage:
  omnidb-storage:
